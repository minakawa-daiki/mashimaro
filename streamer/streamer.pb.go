// Code generated by protoc-gen-go. DO NOT EDIT.
// source: streamer.proto

package streamer

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ConnectClientRequest struct {
	// base64 encoded sdp offer
	SdpOffer             string   `protobuf:"bytes,1,opt,name=sdp_offer,json=sdpOffer,proto3" json:"sdp_offer,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConnectClientRequest) Reset()         { *m = ConnectClientRequest{} }
func (m *ConnectClientRequest) String() string { return proto.CompactTextString(m) }
func (*ConnectClientRequest) ProtoMessage()    {}
func (*ConnectClientRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b26ab11ddf9501b, []int{0}
}

func (m *ConnectClientRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectClientRequest.Unmarshal(m, b)
}
func (m *ConnectClientRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectClientRequest.Marshal(b, m, deterministic)
}
func (m *ConnectClientRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectClientRequest.Merge(m, src)
}
func (m *ConnectClientRequest) XXX_Size() int {
	return xxx_messageInfo_ConnectClientRequest.Size(m)
}
func (m *ConnectClientRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectClientRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectClientRequest proto.InternalMessageInfo

func (m *ConnectClientRequest) GetSdpOffer() string {
	if m != nil {
		return m.SdpOffer
	}
	return ""
}

type ConnectClientResponse struct {
	// base64 encoded sdp answer
	SdpAnswer            string   `protobuf:"bytes,1,opt,name=sdp_answer,json=sdpAnswer,proto3" json:"sdp_answer,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConnectClientResponse) Reset()         { *m = ConnectClientResponse{} }
func (m *ConnectClientResponse) String() string { return proto.CompactTextString(m) }
func (*ConnectClientResponse) ProtoMessage()    {}
func (*ConnectClientResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b26ab11ddf9501b, []int{1}
}

func (m *ConnectClientResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectClientResponse.Unmarshal(m, b)
}
func (m *ConnectClientResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectClientResponse.Marshal(b, m, deterministic)
}
func (m *ConnectClientResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectClientResponse.Merge(m, src)
}
func (m *ConnectClientResponse) XXX_Size() int {
	return xxx_messageInfo_ConnectClientResponse.Size(m)
}
func (m *ConnectClientResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectClientResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectClientResponse proto.InternalMessageInfo

func (m *ConnectClientResponse) GetSdpAnswer() string {
	if m != nil {
		return m.SdpAnswer
	}
	return ""
}

type ConnectServerRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConnectServerRequest) Reset()         { *m = ConnectServerRequest{} }
func (m *ConnectServerRequest) String() string { return proto.CompactTextString(m) }
func (*ConnectServerRequest) ProtoMessage()    {}
func (*ConnectServerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b26ab11ddf9501b, []int{2}
}

func (m *ConnectServerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectServerRequest.Unmarshal(m, b)
}
func (m *ConnectServerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectServerRequest.Marshal(b, m, deterministic)
}
func (m *ConnectServerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectServerRequest.Merge(m, src)
}
func (m *ConnectServerRequest) XXX_Size() int {
	return xxx_messageInfo_ConnectServerRequest.Size(m)
}
func (m *ConnectServerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectServerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectServerRequest proto.InternalMessageInfo

type ConnectServerResponse struct {
	UdpPort              uint32   `protobuf:"varint,1,opt,name=udp_port,json=udpPort,proto3" json:"udp_port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConnectServerResponse) Reset()         { *m = ConnectServerResponse{} }
func (m *ConnectServerResponse) String() string { return proto.CompactTextString(m) }
func (*ConnectServerResponse) ProtoMessage()    {}
func (*ConnectServerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b26ab11ddf9501b, []int{3}
}

func (m *ConnectServerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectServerResponse.Unmarshal(m, b)
}
func (m *ConnectServerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectServerResponse.Marshal(b, m, deterministic)
}
func (m *ConnectServerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectServerResponse.Merge(m, src)
}
func (m *ConnectServerResponse) XXX_Size() int {
	return xxx_messageInfo_ConnectServerResponse.Size(m)
}
func (m *ConnectServerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectServerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectServerResponse proto.InternalMessageInfo

func (m *ConnectServerResponse) GetUdpPort() uint32 {
	if m != nil {
		return m.UdpPort
	}
	return 0
}

type StartStreamingRequest struct {
	Caps                 string   `protobuf:"bytes,1,opt,name=caps,proto3" json:"caps,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartStreamingRequest) Reset()         { *m = StartStreamingRequest{} }
func (m *StartStreamingRequest) String() string { return proto.CompactTextString(m) }
func (*StartStreamingRequest) ProtoMessage()    {}
func (*StartStreamingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b26ab11ddf9501b, []int{4}
}

func (m *StartStreamingRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartStreamingRequest.Unmarshal(m, b)
}
func (m *StartStreamingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartStreamingRequest.Marshal(b, m, deterministic)
}
func (m *StartStreamingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartStreamingRequest.Merge(m, src)
}
func (m *StartStreamingRequest) XXX_Size() int {
	return xxx_messageInfo_StartStreamingRequest.Size(m)
}
func (m *StartStreamingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StartStreamingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StartStreamingRequest proto.InternalMessageInfo

func (m *StartStreamingRequest) GetCaps() string {
	if m != nil {
		return m.Caps
	}
	return ""
}

type StartStreamingResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartStreamingResponse) Reset()         { *m = StartStreamingResponse{} }
func (m *StartStreamingResponse) String() string { return proto.CompactTextString(m) }
func (*StartStreamingResponse) ProtoMessage()    {}
func (*StartStreamingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b26ab11ddf9501b, []int{5}
}

func (m *StartStreamingResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartStreamingResponse.Unmarshal(m, b)
}
func (m *StartStreamingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartStreamingResponse.Marshal(b, m, deterministic)
}
func (m *StartStreamingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartStreamingResponse.Merge(m, src)
}
func (m *StartStreamingResponse) XXX_Size() int {
	return xxx_messageInfo_StartStreamingResponse.Size(m)
}
func (m *StartStreamingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StartStreamingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StartStreamingResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*ConnectClientRequest)(nil), "ConnectClientRequest")
	proto.RegisterType((*ConnectClientResponse)(nil), "ConnectClientResponse")
	proto.RegisterType((*ConnectServerRequest)(nil), "ConnectServerRequest")
	proto.RegisterType((*ConnectServerResponse)(nil), "ConnectServerResponse")
	proto.RegisterType((*StartStreamingRequest)(nil), "StartStreamingRequest")
	proto.RegisterType((*StartStreamingResponse)(nil), "StartStreamingResponse")
}

func init() { proto.RegisterFile("streamer.proto", fileDescriptor_8b26ab11ddf9501b) }

var fileDescriptor_8b26ab11ddf9501b = []byte{
	// 260 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0xc1, 0x4a, 0xc3, 0x40,
	0x10, 0x86, 0x13, 0x10, 0x4d, 0x07, 0xda, 0xc3, 0x62, 0x62, 0xad, 0x08, 0x32, 0x27, 0x41, 0xd8,
	0x43, 0x0b, 0x9e, 0x95, 0x3c, 0x80, 0x92, 0x3c, 0x40, 0x89, 0xcd, 0x54, 0x0a, 0xba, 0xbb, 0xce,
	0x4e, 0xf4, 0x41, 0x7d, 0x21, 0xc9, 0x36, 0x4d, 0x4d, 0xc9, 0x6d, 0x77, 0xd8, 0xf9, 0xfe, 0xf9,
	0x66, 0x61, 0xe6, 0x85, 0xa9, 0xfa, 0x24, 0xd6, 0x8e, 0xad, 0x58, 0x5c, 0xc1, 0x65, 0x6e, 0x8d,
	0xa1, 0x8d, 0xe4, 0x1f, 0x3b, 0x32, 0x52, 0xd0, 0x57, 0x43, 0x5e, 0xd4, 0x0d, 0x4c, 0x7c, 0xed,
	0xd6, 0x76, 0xbb, 0x25, 0x9e, 0xc7, 0x77, 0xf1, 0xfd, 0xa4, 0x48, 0x7c, 0xed, 0x5e, 0xda, 0x3b,
	0x3e, 0x42, 0x7a, 0xd2, 0xe4, 0x9d, 0x35, 0x9e, 0xd4, 0x2d, 0x40, 0xdb, 0x55, 0x19, 0xff, 0xd3,
	0xb7, 0xb5, 0x9c, 0xe7, 0x50, 0xc0, 0xac, 0x0f, 0x2b, 0x89, 0xbf, 0x89, 0xbb, 0x30, 0x5c, 0xf6,
	0xbc, 0x43, 0xbd, 0xe3, 0x5d, 0x43, 0xd2, 0xd4, 0x6e, 0xed, 0x2c, 0x4b, 0xa0, 0x4d, 0x8b, 0x8b,
	0xa6, 0x76, 0xaf, 0x96, 0x05, 0x1f, 0x20, 0x2d, 0xa5, 0x62, 0x29, 0x83, 0xcf, 0xce, 0xbc, 0x1f,
	0x26, 0x57, 0x70, 0xb6, 0xa9, 0x9c, 0xef, 0xd2, 0xc3, 0x19, 0xe7, 0x90, 0x9d, 0x3e, 0xde, 0x27,
	0x2c, 0x7f, 0x63, 0x48, 0xca, 0x6e, 0x25, 0xea, 0x09, 0xa6, 0x03, 0x2f, 0x95, 0xea, 0xb1, 0xe5,
	0x2c, 0x32, 0x3d, 0xaa, 0x8f, 0xd1, 0x3f, 0xc2, 0xde, 0xe4, 0x48, 0x18, 0x18, 0x1f, 0x09, 0x43,
	0x61, 0x8c, 0x54, 0x0e, 0xb3, 0xe1, 0xa8, 0x2a, 0xd3, 0xa3, 0xa2, 0x8b, 0x2b, 0x3d, 0xee, 0x84,
	0xd1, 0xdb, 0x79, 0xf8, 0xdc, 0xd5, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xd9, 0x6e, 0xa2, 0x78,
	0xee, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// StreamerClient is the client API for Streamer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StreamerClient interface {
	ConnectClient(ctx context.Context, in *ConnectClientRequest, opts ...grpc.CallOption) (*ConnectClientResponse, error)
	ConnectServer(ctx context.Context, in *ConnectServerRequest, opts ...grpc.CallOption) (*ConnectServerResponse, error)
	StartStreaming(ctx context.Context, in *StartStreamingRequest, opts ...grpc.CallOption) (*StartStreamingResponse, error)
}

type streamerClient struct {
	cc *grpc.ClientConn
}

func NewStreamerClient(cc *grpc.ClientConn) StreamerClient {
	return &streamerClient{cc}
}

func (c *streamerClient) ConnectClient(ctx context.Context, in *ConnectClientRequest, opts ...grpc.CallOption) (*ConnectClientResponse, error) {
	out := new(ConnectClientResponse)
	err := c.cc.Invoke(ctx, "/Streamer/ConnectClient", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *streamerClient) ConnectServer(ctx context.Context, in *ConnectServerRequest, opts ...grpc.CallOption) (*ConnectServerResponse, error) {
	out := new(ConnectServerResponse)
	err := c.cc.Invoke(ctx, "/Streamer/ConnectServer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *streamerClient) StartStreaming(ctx context.Context, in *StartStreamingRequest, opts ...grpc.CallOption) (*StartStreamingResponse, error) {
	out := new(StartStreamingResponse)
	err := c.cc.Invoke(ctx, "/Streamer/StartStreaming", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StreamerServer is the server API for Streamer service.
type StreamerServer interface {
	ConnectClient(context.Context, *ConnectClientRequest) (*ConnectClientResponse, error)
	ConnectServer(context.Context, *ConnectServerRequest) (*ConnectServerResponse, error)
	StartStreaming(context.Context, *StartStreamingRequest) (*StartStreamingResponse, error)
}

// UnimplementedStreamerServer can be embedded to have forward compatible implementations.
type UnimplementedStreamerServer struct {
}

func (*UnimplementedStreamerServer) ConnectClient(ctx context.Context, req *ConnectClientRequest) (*ConnectClientResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ConnectClient not implemented")
}
func (*UnimplementedStreamerServer) ConnectServer(ctx context.Context, req *ConnectServerRequest) (*ConnectServerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ConnectServer not implemented")
}
func (*UnimplementedStreamerServer) StartStreaming(ctx context.Context, req *StartStreamingRequest) (*StartStreamingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StartStreaming not implemented")
}

func RegisterStreamerServer(s *grpc.Server, srv StreamerServer) {
	s.RegisterService(&_Streamer_serviceDesc, srv)
}

func _Streamer_ConnectClient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConnectClientRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StreamerServer).ConnectClient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Streamer/ConnectClient",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StreamerServer).ConnectClient(ctx, req.(*ConnectClientRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Streamer_ConnectServer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConnectServerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StreamerServer).ConnectServer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Streamer/ConnectServer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StreamerServer).ConnectServer(ctx, req.(*ConnectServerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Streamer_StartStreaming_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartStreamingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StreamerServer).StartStreaming(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Streamer/StartStreaming",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StreamerServer).StartStreaming(ctx, req.(*StartStreamingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Streamer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Streamer",
	HandlerType: (*StreamerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ConnectClient",
			Handler:    _Streamer_ConnectClient_Handler,
		},
		{
			MethodName: "ConnectServer",
			Handler:    _Streamer_ConnectServer_Handler,
		},
		{
			MethodName: "StartStreaming",
			Handler:    _Streamer_StartStreaming_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "streamer.proto",
}
