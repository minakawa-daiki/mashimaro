// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/gamewrapper.proto

package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type StartGameRequest struct {
	Command          string   `protobuf:"bytes,1,opt,name=command" json:"command,omitempty"`
	Args             []string `protobuf:"bytes,2,rep,name=args" json:"args,omitempty"`
	WorkingDirectory string   `protobuf:"bytes,3,opt,name=working_directory,json=workingDirectory" json:"working_directory,omitempty"`
}

func (m *StartGameRequest) Reset()                    { *m = StartGameRequest{} }
func (m *StartGameRequest) String() string            { return proto1.CompactTextString(m) }
func (*StartGameRequest) ProtoMessage()               {}
func (*StartGameRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *StartGameRequest) GetCommand() string {
	if m != nil {
		return m.Command
	}
	return ""
}

func (m *StartGameRequest) GetArgs() []string {
	if m != nil {
		return m.Args
	}
	return nil
}

func (m *StartGameRequest) GetWorkingDirectory() string {
	if m != nil {
		return m.WorkingDirectory
	}
	return ""
}

type StartGameResponse struct {
}

func (m *StartGameResponse) Reset()                    { *m = StartGameResponse{} }
func (m *StartGameResponse) String() string            { return proto1.CompactTextString(m) }
func (*StartGameResponse) ProtoMessage()               {}
func (*StartGameResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func init() {
	proto1.RegisterType((*StartGameRequest)(nil), "StartGameRequest")
	proto1.RegisterType((*StartGameResponse)(nil), "StartGameResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for GameWrapper service

type GameWrapperClient interface {
	StartGame(ctx context.Context, in *StartGameRequest, opts ...grpc.CallOption) (*StartGameResponse, error)
}

type gameWrapperClient struct {
	cc *grpc.ClientConn
}

func NewGameWrapperClient(cc *grpc.ClientConn) GameWrapperClient {
	return &gameWrapperClient{cc}
}

func (c *gameWrapperClient) StartGame(ctx context.Context, in *StartGameRequest, opts ...grpc.CallOption) (*StartGameResponse, error) {
	out := new(StartGameResponse)
	err := grpc.Invoke(ctx, "/GameWrapper/StartGame", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for GameWrapper service

type GameWrapperServer interface {
	StartGame(context.Context, *StartGameRequest) (*StartGameResponse, error)
}

func RegisterGameWrapperServer(s *grpc.Server, srv GameWrapperServer) {
	s.RegisterService(&_GameWrapper_serviceDesc, srv)
}

func _GameWrapper_StartGame_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartGameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GameWrapperServer).StartGame(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/GameWrapper/StartGame",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GameWrapperServer).StartGame(ctx, req.(*StartGameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GameWrapper_serviceDesc = grpc.ServiceDesc{
	ServiceName: "GameWrapper",
	HandlerType: (*GameWrapperServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "StartGame",
			Handler:    _GameWrapper_StartGame_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/gamewrapper.proto",
}

func init() { proto1.RegisterFile("proto/gamewrapper.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 184 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2f, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0x4f, 0x4f, 0xcc, 0x4d, 0x2d, 0x2f, 0x4a, 0x2c, 0x28, 0x48, 0x2d, 0xd2, 0x03, 0x8b,
	0x28, 0xe5, 0x72, 0x09, 0x04, 0x97, 0x24, 0x16, 0x95, 0xb8, 0x27, 0xe6, 0xa6, 0x06, 0xa5, 0x16,
	0x96, 0xa6, 0x16, 0x97, 0x08, 0x49, 0x70, 0xb1, 0x27, 0xe7, 0xe7, 0xe6, 0x26, 0xe6, 0xa5, 0x48,
	0x30, 0x2a, 0x30, 0x6a, 0x70, 0x06, 0xc1, 0xb8, 0x42, 0x42, 0x5c, 0x2c, 0x89, 0x45, 0xe9, 0xc5,
	0x12, 0x4c, 0x0a, 0xcc, 0x1a, 0x9c, 0x41, 0x60, 0xb6, 0x90, 0x36, 0x97, 0x60, 0x79, 0x7e, 0x51,
	0x76, 0x66, 0x5e, 0x7a, 0x7c, 0x4a, 0x66, 0x51, 0x6a, 0x72, 0x49, 0x7e, 0x51, 0xa5, 0x04, 0x33,
	0x58, 0x9f, 0x00, 0x54, 0xc2, 0x05, 0x26, 0xae, 0x24, 0xcc, 0x25, 0x88, 0x64, 0x5d, 0x71, 0x41,
	0x7e, 0x5e, 0x71, 0xaa, 0x91, 0x33, 0x17, 0x37, 0x88, 0x1f, 0x0e, 0x71, 0x98, 0x90, 0x09, 0x17,
	0x27, 0x5c, 0x8d, 0x90, 0xa0, 0x1e, 0xba, 0xf3, 0xa4, 0x84, 0xf4, 0x30, 0x8c, 0x50, 0x62, 0x70,
	0x62, 0x8f, 0x62, 0x05, 0xfb, 0x28, 0x89, 0x0d, 0x4c, 0x19, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff,
	0x81, 0xfb, 0x98, 0x49, 0xf3, 0x00, 0x00, 0x00,
}
