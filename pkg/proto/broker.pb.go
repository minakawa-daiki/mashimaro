// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/broker.proto

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	proto/broker.proto
	proto/gamewrapper.proto

It has these top-level messages:
	FindSessionRequest
	FindSessionResponse
	DeleteSessionRequest
	DeleteSessionResponse
	Session
	GameMetadata
	StartGameRequest
	StartGameResponse
	ExitGameRequest
	ExitGameResponse
	HealthCheckRequest
	HealthCheckResponse
	ListenCaptureAreaRequest
	ListenCaptureAreaResponse
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type FindSessionRequest struct {
	GameserverName string `protobuf:"bytes,1,opt,name=gameserver_name,json=gameserverName" json:"gameserver_name,omitempty"`
}

func (m *FindSessionRequest) Reset()                    { *m = FindSessionRequest{} }
func (m *FindSessionRequest) String() string            { return proto1.CompactTextString(m) }
func (*FindSessionRequest) ProtoMessage()               {}
func (*FindSessionRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *FindSessionRequest) GetGameserverName() string {
	if m != nil {
		return m.GameserverName
	}
	return ""
}

type FindSessionResponse struct {
	Found   bool     `protobuf:"varint,1,opt,name=found" json:"found,omitempty"`
	Session *Session `protobuf:"bytes,2,opt,name=session" json:"session,omitempty"`
}

func (m *FindSessionResponse) Reset()                    { *m = FindSessionResponse{} }
func (m *FindSessionResponse) String() string            { return proto1.CompactTextString(m) }
func (*FindSessionResponse) ProtoMessage()               {}
func (*FindSessionResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *FindSessionResponse) GetFound() bool {
	if m != nil {
		return m.Found
	}
	return false
}

func (m *FindSessionResponse) GetSession() *Session {
	if m != nil {
		return m.Session
	}
	return nil
}

type DeleteSessionRequest struct {
	SessionId      string `protobuf:"bytes,1,opt,name=session_id,json=sessionId" json:"session_id,omitempty"`
	GameserverName string `protobuf:"bytes,2,opt,name=gameserver_name,json=gameserverName" json:"gameserver_name,omitempty"`
}

func (m *DeleteSessionRequest) Reset()                    { *m = DeleteSessionRequest{} }
func (m *DeleteSessionRequest) String() string            { return proto1.CompactTextString(m) }
func (*DeleteSessionRequest) ProtoMessage()               {}
func (*DeleteSessionRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *DeleteSessionRequest) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

func (m *DeleteSessionRequest) GetGameserverName() string {
	if m != nil {
		return m.GameserverName
	}
	return ""
}

type DeleteSessionResponse struct {
}

func (m *DeleteSessionResponse) Reset()                    { *m = DeleteSessionResponse{} }
func (m *DeleteSessionResponse) String() string            { return proto1.CompactTextString(m) }
func (*DeleteSessionResponse) ProtoMessage()               {}
func (*DeleteSessionResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type Session struct {
	SessionId    string        `protobuf:"bytes,1,opt,name=session_id,json=sessionId" json:"session_id,omitempty"`
	GameMetadata *GameMetadata `protobuf:"bytes,2,opt,name=game_metadata,json=gameMetadata" json:"game_metadata,omitempty"`
}

func (m *Session) Reset()                    { *m = Session{} }
func (m *Session) String() string            { return proto1.CompactTextString(m) }
func (*Session) ProtoMessage()               {}
func (*Session) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Session) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

func (m *Session) GetGameMetadata() *GameMetadata {
	if m != nil {
		return m.GameMetadata
	}
	return nil
}

type GameMetadata struct {
	Body string `protobuf:"bytes,1,opt,name=body" json:"body,omitempty"`
}

func (m *GameMetadata) Reset()                    { *m = GameMetadata{} }
func (m *GameMetadata) String() string            { return proto1.CompactTextString(m) }
func (*GameMetadata) ProtoMessage()               {}
func (*GameMetadata) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *GameMetadata) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func init() {
	proto1.RegisterType((*FindSessionRequest)(nil), "FindSessionRequest")
	proto1.RegisterType((*FindSessionResponse)(nil), "FindSessionResponse")
	proto1.RegisterType((*DeleteSessionRequest)(nil), "DeleteSessionRequest")
	proto1.RegisterType((*DeleteSessionResponse)(nil), "DeleteSessionResponse")
	proto1.RegisterType((*Session)(nil), "Session")
	proto1.RegisterType((*GameMetadata)(nil), "GameMetadata")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Broker service

type BrokerClient interface {
	FindSession(ctx context.Context, in *FindSessionRequest, opts ...grpc.CallOption) (*FindSessionResponse, error)
	DeleteSession(ctx context.Context, in *DeleteSessionRequest, opts ...grpc.CallOption) (*DeleteSessionResponse, error)
}

type brokerClient struct {
	cc *grpc.ClientConn
}

func NewBrokerClient(cc *grpc.ClientConn) BrokerClient {
	return &brokerClient{cc}
}

func (c *brokerClient) FindSession(ctx context.Context, in *FindSessionRequest, opts ...grpc.CallOption) (*FindSessionResponse, error) {
	out := new(FindSessionResponse)
	err := grpc.Invoke(ctx, "/Broker/FindSession", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *brokerClient) DeleteSession(ctx context.Context, in *DeleteSessionRequest, opts ...grpc.CallOption) (*DeleteSessionResponse, error) {
	out := new(DeleteSessionResponse)
	err := grpc.Invoke(ctx, "/Broker/DeleteSession", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Broker service

type BrokerServer interface {
	FindSession(context.Context, *FindSessionRequest) (*FindSessionResponse, error)
	DeleteSession(context.Context, *DeleteSessionRequest) (*DeleteSessionResponse, error)
}

func RegisterBrokerServer(s *grpc.Server, srv BrokerServer) {
	s.RegisterService(&_Broker_serviceDesc, srv)
}

func _Broker_FindSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindSessionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BrokerServer).FindSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Broker/FindSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BrokerServer).FindSession(ctx, req.(*FindSessionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Broker_DeleteSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteSessionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BrokerServer).DeleteSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Broker/DeleteSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BrokerServer).DeleteSession(ctx, req.(*DeleteSessionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Broker_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Broker",
	HandlerType: (*BrokerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "FindSession",
			Handler:    _Broker_FindSession_Handler,
		},
		{
			MethodName: "DeleteSession",
			Handler:    _Broker_DeleteSession_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/broker.proto",
}

func init() { proto1.RegisterFile("proto/broker.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 294 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x52, 0x41, 0x4b, 0xf3, 0x40,
	0x10, 0x6d, 0xca, 0xd7, 0xa6, 0x9d, 0x36, 0x9f, 0x30, 0x4d, 0xb5, 0x14, 0x84, 0xb2, 0x17, 0x7b,
	0x5a, 0x21, 0xde, 0x04, 0x41, 0x8a, 0x28, 0x1e, 0x54, 0x88, 0x37, 0x11, 0xc3, 0x86, 0x1d, 0x4b,
	0xd0, 0x64, 0x6b, 0x36, 0x15, 0xfc, 0x03, 0xfe, 0x6e, 0x71, 0xb3, 0xc5, 0xb4, 0x2e, 0x78, 0xda,
	0x9d, 0x37, 0x33, 0x6f, 0xdf, 0xbc, 0x59, 0xc0, 0x55, 0xa9, 0x2a, 0x75, 0x9c, 0x96, 0xea, 0x85,
	0x4a, 0x6e, 0x02, 0x76, 0x06, 0x78, 0x99, 0x15, 0xf2, 0x9e, 0xb4, 0xce, 0x54, 0x11, 0xd3, 0xdb,
	0x9a, 0x74, 0x85, 0x47, 0xb0, 0xb7, 0x14, 0x39, 0x69, 0x2a, 0xdf, 0xa9, 0x4c, 0x0a, 0x91, 0xd3,
	0xc4, 0x9b, 0x79, 0xf3, 0x7e, 0xfc, 0xff, 0x07, 0xbe, 0x15, 0x39, 0xb1, 0x3b, 0x18, 0x6d, 0xb5,
	0xeb, 0x95, 0x2a, 0x34, 0x61, 0x08, 0x9d, 0x67, 0xb5, 0x2e, 0xa4, 0xe9, 0xea, 0xc5, 0x75, 0x80,
	0x0c, 0x7c, 0x5d, 0x17, 0x4e, 0xda, 0x33, 0x6f, 0x3e, 0x88, 0x7a, 0x7c, 0xd3, 0xb8, 0x49, 0xb0,
	0x27, 0x08, 0x2f, 0xe8, 0x95, 0x2a, 0xda, 0x51, 0x74, 0x08, 0x60, 0x4b, 0x92, 0x4c, 0x5a, 0x31,
	0x7d, 0x8b, 0x5c, 0x4b, 0x97, 0xe0, 0xb6, 0x53, 0xf0, 0x01, 0x8c, 0x77, 0xf8, 0x6b, 0xc9, 0xec,
	0x11, 0x7c, 0x0b, 0xfd, 0xf5, 0x56, 0x04, 0xc1, 0x37, 0x69, 0x92, 0x53, 0x25, 0xa4, 0xa8, 0x84,
	0x1d, 0x26, 0xe0, 0x57, 0x22, 0xa7, 0x1b, 0x0b, 0xc6, 0xc3, 0x65, 0x23, 0x62, 0x0c, 0x86, 0xcd,
	0x2c, 0x22, 0xfc, 0x4b, 0x95, 0xfc, 0xb0, 0xe4, 0xe6, 0x1e, 0x7d, 0x7a, 0xd0, 0x5d, 0x98, 0xdd,
	0xe0, 0x29, 0x0c, 0x1a, 0xb6, 0xe2, 0x88, 0xff, 0xde, 0xd1, 0x34, 0xe4, 0x0e, 0xe7, 0x59, 0x0b,
	0xcf, 0x21, 0xd8, 0x9a, 0x10, 0xc7, 0xdc, 0xe5, 0xe8, 0x74, 0x9f, 0xbb, 0x8d, 0x68, 0x2d, 0xfc,
	0x87, 0x8e, 0xf9, 0x1c, 0x69, 0xd7, 0x1c, 0x27, 0x5f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x5a, 0x07,
	0xf1, 0x56, 0x39, 0x02, 0x00, 0x00,
}
