// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/signaling.proto

package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type ReceiveSignalingOfferRequest struct {
	SessionId string `protobuf:"bytes,1,opt,name=session_id,json=sessionId" json:"session_id,omitempty"`
}

func (m *ReceiveSignalingOfferRequest) Reset()                    { *m = ReceiveSignalingOfferRequest{} }
func (m *ReceiveSignalingOfferRequest) String() string            { return proto1.CompactTextString(m) }
func (*ReceiveSignalingOfferRequest) ProtoMessage()               {}
func (*ReceiveSignalingOfferRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *ReceiveSignalingOfferRequest) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

type ReceiveSignalingOfferResponse struct {
	Found bool            `protobuf:"varint,1,opt,name=found" json:"found,omitempty"`
	Offer *SignalingOffer `protobuf:"bytes,2,opt,name=offer" json:"offer,omitempty"`
}

func (m *ReceiveSignalingOfferResponse) Reset()                    { *m = ReceiveSignalingOfferResponse{} }
func (m *ReceiveSignalingOfferResponse) String() string            { return proto1.CompactTextString(m) }
func (*ReceiveSignalingOfferResponse) ProtoMessage()               {}
func (*ReceiveSignalingOfferResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *ReceiveSignalingOfferResponse) GetFound() bool {
	if m != nil {
		return m.Found
	}
	return false
}

func (m *ReceiveSignalingOfferResponse) GetOffer() *SignalingOffer {
	if m != nil {
		return m.Offer
	}
	return nil
}

type SendSignalingAnswerRequest struct {
	SessionId       string           `protobuf:"bytes,1,opt,name=session_id,json=sessionId" json:"session_id,omitempty"`
	SignalingAnswer *SignalingAnswer `protobuf:"bytes,2,opt,name=signaling_answer,json=signalingAnswer" json:"signaling_answer,omitempty"`
}

func (m *SendSignalingAnswerRequest) Reset()                    { *m = SendSignalingAnswerRequest{} }
func (m *SendSignalingAnswerRequest) String() string            { return proto1.CompactTextString(m) }
func (*SendSignalingAnswerRequest) ProtoMessage()               {}
func (*SendSignalingAnswerRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *SendSignalingAnswerRequest) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

func (m *SendSignalingAnswerRequest) GetSignalingAnswer() *SignalingAnswer {
	if m != nil {
		return m.SignalingAnswer
	}
	return nil
}

type SendSignalingAnswerResponse struct {
}

func (m *SendSignalingAnswerResponse) Reset()                    { *m = SendSignalingAnswerResponse{} }
func (m *SendSignalingAnswerResponse) String() string            { return proto1.CompactTextString(m) }
func (*SendSignalingAnswerResponse) ProtoMessage()               {}
func (*SendSignalingAnswerResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

type SignalingOffer struct {
	Body string `protobuf:"bytes,1,opt,name=body" json:"body,omitempty"`
}

func (m *SignalingOffer) Reset()                    { *m = SignalingOffer{} }
func (m *SignalingOffer) String() string            { return proto1.CompactTextString(m) }
func (*SignalingOffer) ProtoMessage()               {}
func (*SignalingOffer) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *SignalingOffer) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

type SignalingAnswer struct {
	Body string `protobuf:"bytes,1,opt,name=body" json:"body,omitempty"`
}

func (m *SignalingAnswer) Reset()                    { *m = SignalingAnswer{} }
func (m *SignalingAnswer) String() string            { return proto1.CompactTextString(m) }
func (*SignalingAnswer) ProtoMessage()               {}
func (*SignalingAnswer) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

func (m *SignalingAnswer) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

type TrickleSignalingRequest struct {
	SessionId string        `protobuf:"bytes,1,opt,name=session_id,json=sessionId" json:"session_id,omitempty"`
	Candidate *ICECandidate `protobuf:"bytes,2,opt,name=candidate" json:"candidate,omitempty"`
}

func (m *TrickleSignalingRequest) Reset()                    { *m = TrickleSignalingRequest{} }
func (m *TrickleSignalingRequest) String() string            { return proto1.CompactTextString(m) }
func (*TrickleSignalingRequest) ProtoMessage()               {}
func (*TrickleSignalingRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

func (m *TrickleSignalingRequest) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

func (m *TrickleSignalingRequest) GetCandidate() *ICECandidate {
	if m != nil {
		return m.Candidate
	}
	return nil
}

type TrickleSignalingResponse struct {
	SessionId string        `protobuf:"bytes,1,opt,name=session_id,json=sessionId" json:"session_id,omitempty"`
	Candidate *ICECandidate `protobuf:"bytes,2,opt,name=candidate" json:"candidate,omitempty"`
}

func (m *TrickleSignalingResponse) Reset()                    { *m = TrickleSignalingResponse{} }
func (m *TrickleSignalingResponse) String() string            { return proto1.CompactTextString(m) }
func (*TrickleSignalingResponse) ProtoMessage()               {}
func (*TrickleSignalingResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{7} }

func (m *TrickleSignalingResponse) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

func (m *TrickleSignalingResponse) GetCandidate() *ICECandidate {
	if m != nil {
		return m.Candidate
	}
	return nil
}

type ICECandidate struct {
	Body string `protobuf:"bytes,1,opt,name=body" json:"body,omitempty"`
}

func (m *ICECandidate) Reset()                    { *m = ICECandidate{} }
func (m *ICECandidate) String() string            { return proto1.CompactTextString(m) }
func (*ICECandidate) ProtoMessage()               {}
func (*ICECandidate) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{8} }

func (m *ICECandidate) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func init() {
	proto1.RegisterType((*ReceiveSignalingOfferRequest)(nil), "ReceiveSignalingOfferRequest")
	proto1.RegisterType((*ReceiveSignalingOfferResponse)(nil), "ReceiveSignalingOfferResponse")
	proto1.RegisterType((*SendSignalingAnswerRequest)(nil), "SendSignalingAnswerRequest")
	proto1.RegisterType((*SendSignalingAnswerResponse)(nil), "SendSignalingAnswerResponse")
	proto1.RegisterType((*SignalingOffer)(nil), "SignalingOffer")
	proto1.RegisterType((*SignalingAnswer)(nil), "SignalingAnswer")
	proto1.RegisterType((*TrickleSignalingRequest)(nil), "TrickleSignalingRequest")
	proto1.RegisterType((*TrickleSignalingResponse)(nil), "TrickleSignalingResponse")
	proto1.RegisterType((*ICECandidate)(nil), "ICECandidate")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Signaling service

type SignalingClient interface {
	ReceiveSignalingOffer(ctx context.Context, in *ReceiveSignalingOfferRequest, opts ...grpc.CallOption) (*ReceiveSignalingOfferResponse, error)
	SendSignalingAnswer(ctx context.Context, in *SendSignalingAnswerRequest, opts ...grpc.CallOption) (*SendSignalingAnswerResponse, error)
	TrickleSignaling(ctx context.Context, opts ...grpc.CallOption) (Signaling_TrickleSignalingClient, error)
}

type signalingClient struct {
	cc *grpc.ClientConn
}

func NewSignalingClient(cc *grpc.ClientConn) SignalingClient {
	return &signalingClient{cc}
}

func (c *signalingClient) ReceiveSignalingOffer(ctx context.Context, in *ReceiveSignalingOfferRequest, opts ...grpc.CallOption) (*ReceiveSignalingOfferResponse, error) {
	out := new(ReceiveSignalingOfferResponse)
	err := grpc.Invoke(ctx, "/Signaling/ReceiveSignalingOffer", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *signalingClient) SendSignalingAnswer(ctx context.Context, in *SendSignalingAnswerRequest, opts ...grpc.CallOption) (*SendSignalingAnswerResponse, error) {
	out := new(SendSignalingAnswerResponse)
	err := grpc.Invoke(ctx, "/Signaling/SendSignalingAnswer", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *signalingClient) TrickleSignaling(ctx context.Context, opts ...grpc.CallOption) (Signaling_TrickleSignalingClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_Signaling_serviceDesc.Streams[0], c.cc, "/Signaling/TrickleSignaling", opts...)
	if err != nil {
		return nil, err
	}
	x := &signalingTrickleSignalingClient{stream}
	return x, nil
}

type Signaling_TrickleSignalingClient interface {
	Send(*TrickleSignalingRequest) error
	Recv() (*TrickleSignalingResponse, error)
	grpc.ClientStream
}

type signalingTrickleSignalingClient struct {
	grpc.ClientStream
}

func (x *signalingTrickleSignalingClient) Send(m *TrickleSignalingRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *signalingTrickleSignalingClient) Recv() (*TrickleSignalingResponse, error) {
	m := new(TrickleSignalingResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for Signaling service

type SignalingServer interface {
	ReceiveSignalingOffer(context.Context, *ReceiveSignalingOfferRequest) (*ReceiveSignalingOfferResponse, error)
	SendSignalingAnswer(context.Context, *SendSignalingAnswerRequest) (*SendSignalingAnswerResponse, error)
	TrickleSignaling(Signaling_TrickleSignalingServer) error
}

func RegisterSignalingServer(s *grpc.Server, srv SignalingServer) {
	s.RegisterService(&_Signaling_serviceDesc, srv)
}

func _Signaling_ReceiveSignalingOffer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReceiveSignalingOfferRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SignalingServer).ReceiveSignalingOffer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Signaling/ReceiveSignalingOffer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SignalingServer).ReceiveSignalingOffer(ctx, req.(*ReceiveSignalingOfferRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Signaling_SendSignalingAnswer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendSignalingAnswerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SignalingServer).SendSignalingAnswer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Signaling/SendSignalingAnswer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SignalingServer).SendSignalingAnswer(ctx, req.(*SendSignalingAnswerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Signaling_TrickleSignaling_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(SignalingServer).TrickleSignaling(&signalingTrickleSignalingServer{stream})
}

type Signaling_TrickleSignalingServer interface {
	Send(*TrickleSignalingResponse) error
	Recv() (*TrickleSignalingRequest, error)
	grpc.ServerStream
}

type signalingTrickleSignalingServer struct {
	grpc.ServerStream
}

func (x *signalingTrickleSignalingServer) Send(m *TrickleSignalingResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *signalingTrickleSignalingServer) Recv() (*TrickleSignalingRequest, error) {
	m := new(TrickleSignalingRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Signaling_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Signaling",
	HandlerType: (*SignalingServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ReceiveSignalingOffer",
			Handler:    _Signaling_ReceiveSignalingOffer_Handler,
		},
		{
			MethodName: "SendSignalingAnswer",
			Handler:    _Signaling_SendSignalingAnswer_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "TrickleSignaling",
			Handler:       _Signaling_TrickleSignaling_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "proto/signaling.proto",
}

func init() { proto1.RegisterFile("proto/signaling.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 350 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x53, 0x4b, 0x4f, 0xf2, 0x40,
	0x14, 0xa5, 0xe4, 0xe3, 0xd3, 0x5e, 0x1f, 0x90, 0xab, 0xc4, 0x5a, 0xa8, 0x21, 0x13, 0x49, 0x48,
	0x4c, 0x46, 0x83, 0x4b, 0xe3, 0x42, 0x89, 0x0b, 0x16, 0xc6, 0x64, 0x70, 0x61, 0x8c, 0x09, 0x29,
	0xcc, 0x94, 0x4c, 0x24, 0x33, 0xc8, 0x80, 0x8f, 0x7f, 0xe0, 0xcf, 0x36, 0xb6, 0x05, 0xa4, 0xb6,
	0x84, 0x85, 0xab, 0x76, 0xee, 0x99, 0xfb, 0x38, 0xf7, 0x9c, 0x81, 0xf2, 0x68, 0xac, 0x27, 0xfa,
	0xd4, 0xc8, 0x81, 0xf2, 0x87, 0x52, 0x0d, 0x68, 0x78, 0x26, 0x97, 0x50, 0x65, 0xa2, 0x2f, 0xe4,
	0xab, 0xe8, 0xcc, 0x90, 0xbb, 0x20, 0x10, 0x63, 0x26, 0x5e, 0xa6, 0xc2, 0x4c, 0xd0, 0x03, 0x30,
	0xc2, 0x18, 0xa9, 0x55, 0x57, 0x72, 0xc7, 0xaa, 0x59, 0x0d, 0x9b, 0xd9, 0x71, 0xa4, 0xcd, 0xc9,
	0x13, 0x78, 0x19, 0xe9, 0x66, 0xa4, 0x95, 0x11, 0xb8, 0x0f, 0x85, 0x40, 0x4f, 0x55, 0x94, 0xba,
	0xc9, 0xa2, 0x03, 0xd6, 0xa1, 0xa0, 0xbf, 0xaf, 0x39, 0xf9, 0x9a, 0xd5, 0xd8, 0x6a, 0x16, 0x69,
	0x22, 0x3b, 0x42, 0xc9, 0x3b, 0xb8, 0x1d, 0xa1, 0xf8, 0x1c, 0xbc, 0x52, 0xe6, 0x6d, 0xdd, 0xd1,
	0xf0, 0x02, 0x4a, 0x73, 0xb2, 0x5d, 0x3f, 0xcc, 0x8c, 0xdb, 0x95, 0x68, 0xb2, 0x62, 0xd1, 0x2c,
	0x07, 0x88, 0x07, 0x95, 0xd4, 0xce, 0x11, 0x2b, 0x72, 0x0c, 0xbb, 0xcb, 0x13, 0x23, 0xc2, 0xbf,
	0x9e, 0xe6, 0x1f, 0xf1, 0x18, 0xe1, 0x3f, 0xa9, 0x43, 0x31, 0x51, 0x20, 0xf5, 0x9a, 0x80, 0x83,
	0xfb, 0xb1, 0xec, 0x3f, 0x0f, 0x17, 0x3b, 0x5c, 0x93, 0xe2, 0x09, 0xd8, 0x7d, 0x5f, 0x71, 0xc9,
	0xfd, 0x89, 0x88, 0xb9, 0xed, 0xd0, 0x76, 0xeb, 0xa6, 0x35, 0x0b, 0xb2, 0x05, 0x4e, 0x02, 0x70,
	0x7e, 0xb7, 0x89, 0x55, 0xfa, 0xcb, 0x3e, 0x04, 0xb6, 0x7f, 0x42, 0x69, 0x94, 0x9b, 0x9f, 0x79,
	0xb0, 0xe7, 0x53, 0xe0, 0x03, 0x94, 0x53, 0x4d, 0x84, 0x1e, 0x5d, 0xe5, 0x4d, 0xf7, 0x88, 0xae,
	0xf4, 0x1e, 0xc9, 0x21, 0x83, 0xbd, 0x14, 0x19, 0xb1, 0x42, 0xb3, 0x6d, 0xe5, 0x56, 0xe9, 0x2a,
	0xe5, 0x73, 0x78, 0x0b, 0xa5, 0xe4, 0x1e, 0xd1, 0xa1, 0x19, 0x0a, 0xba, 0x87, 0x34, 0x6b, 0xe9,
	0x24, 0xd7, 0xb0, 0xce, 0xac, 0xeb, 0x8d, 0xc7, 0x42, 0xf8, 0x12, 0x7b, 0xff, 0xc3, 0xcf, 0xf9,
	0x57, 0x00, 0x00, 0x00, 0xff, 0xff, 0xb3, 0xb5, 0x51, 0xcc, 0xa9, 0x03, 0x00, 0x00,
}
